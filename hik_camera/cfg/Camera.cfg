#!/usr/bin/env python
PACKAGE = "hik_camera"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Exposure
gen.add("exposure_value", double_t, 0, "Exposure time when not in auto mode", 100., 65., 1000000.)
gen.add("auto_exposure_min", int_t, 0, "Min auto exposure time(us)", 65, 65, 1000000)
gen.add("auto_exposure_max", int_t, 0, "Max auto exposure time(us)", 10759, 65, 1000000)
gen.add("auto_exposure", bool_t, 0, "Auto exposure", True)

# Brightness
gen.add("brightness_value", int_t, 0, "Brightness value when in auto exposure.", 100, 0, 255)

# Gain
gen.add("gain_value", double_t, 0, "Gain value when not in auto mode", 2., 0., 15.0062)
gen.add("auto_gain_min", double_t, 0, "Min gain value", 0., 0., 15.0062)
gen.add("auto_gain_max", double_t, 0, "Max gain value", 15.0062, 0., 15.0062)
gen.add("auto_gain", bool_t, 0, "Auto Gain", True)

# Black Level
gen.add("black_level_value", int_t, 0, "Black level value when not in auto mode", 100, 0, 4095)
gen.add("black_level_enable", bool_t, 0, "Enable Black Level adjustment", True)

# White balance
channel = gen.enum([gen.const("Red", int_t, 0, "Red channel"),
                    gen.const("Green", int_t, 1, "Green channel"),
                    gen.const("Blue", int_t, 2, "Blue channel")],
                   "channel")
gen.add("white_balance_channel", int_t, 0, "White balance channel selector", 0, 0, 2, edit_method=channel)
gen.add("white_balance_value", int_t, 0, "White balance value when not in auto mode", 1231, 1, 16376)
gen.add("auto_white_balance", bool_t, 0, "Auto white balance", True)

# Gamma
gammaMode = gen.enum([gen.const("User", int_t, 1, "Use the value you provide"),
                    gen.const("sRGB", int_t, 2, "Use build-in sRGB value")],
                   "gammaMode")
gen.add("gamma_mode", int_t, 0, "Gamma mode selector", 1, 1, 2, edit_method=gammaMode)
gen.add("gamma_value", double_t, 0, "Gamma value when in user mode", 0.7, 0., 4.)
gen.add("gamma_enable", bool_t, 0, "Enable Gamma Correction", False)

# Hue
gen.add("hue_value", int_t, 0, "Hue value", 128, 0, 255)
gen.add("hue_enable", bool_t, 0, "Enable Hue adjustment", False)

# Saturation
gen.add("saturation_value", int_t, 0, "Saturation value", 128, 0, 255)
gen.add("saturation_enable", bool_t, 0, "Enable Saturation adjustment", False)

exit(gen.generate(PACKAGE, "hik_camera", "Camera"))